<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.project.score.infrastructure.repository.ScoreMessageMapper">
    <resultMap id="scoreMap" type="com.example.demo.project.score.domain.ScoreMessageRow">
        <result property="studentId" column="stu_id"/>
        <result property="studentName" column="stu_name"/>
        <result property="subjectId" column="sub_id"/>
        <result property="subjectName" column="sub_name"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="teacherName" column="teacher_name"/>
        <result property="score" column="score"/>
        <result property="period" column="period"/>
    </resultMap>

    <resultMap id="rankScoreMap" type="com.example.demo.project.score.domain.ScoresRankingDto">
        <result property="studentId" column="stu_id"/>
        <result property="studentName" column="stu_name"/>
        <result property="sumScore" column="sumScore"/>
        <result property="period" column="period"/>
    </resultMap>

    <insert id="insertScore">
        insert into score_message (stu_id,stu_name,sub_id,sub_name,teacher_id,teacher_name,score,period)
        Value (#{score.studentId},
               #{score.studentName},
               #{score.subjectId},
               #{score.subjectName},
               #{score.teacherId},
               #{score.teacherName},
               #{score.score},
               #{score.period})
    </insert>

    <select id="getSingleScore" resultType="Integer">
        select score from score_message where stu_id = #{studentId} and sub_id = #{subjectId}
    </select>

    <select id="getScore" resultMap="scoreMap">
        select * from score_message where 1=1
        <if test="score.stuId != null">
            and stu_id = #{score.stuId}
        </if>
        <if test="score.period != null">
            and #{score.period} like concat (period,'%')
        </if>
        <if test="score.subject != null and score.subject != ''">
            and sub_name = #{score.subject}
        </if>
    </select>

    <select id="getAverageScore" resultType="Integer">
        select AVG(score) from score_message where sub_name = #{score.subject}
                                                    and #{score.period} like concat (period,'%')
    </select>

    <select id="rankScore" resultMap="rankScoreMap">
        select stu_id,stu_name, SUM(score) as sumScore,period from score_message where #{score.period} like concat (period,'%')
                                        GROUP BY stu_name,stu_id,period ORDER BY sumScore DESC
    </select>

</mapper>
